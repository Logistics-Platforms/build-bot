name: Build Talent App Development

on:
  repository_dispatch:
    types:
      - TalentHR-development-*

env:
  LANG: en_US.UTF-8
  RUBY_VERSION: 3.0.0
  PROFILE: development
  REF_NAME: ${{ github.event.client_payload.ref_name }}

jobs:
  check-cache:
    name: Check Cache
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.MAIN_REPOSITORY }}
          token: ${{ secrets.PUBLIC_REPO_PAT }}
          ref: ${{ env.REF_NAME }}

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: Install Node Modules
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install

  build:
    name: Build ${{matrix.platform}}
    needs: [check-cache]
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "macos-14"
            platform: "ios"
            type: ipa
          - name: "ubuntu-22.04"
            platform: "android"
            type: apk

    runs-on: "macos-14"
    steps:
      - name: 🔨 Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.MAIN_REPOSITORY }}
          token: ${{ secrets.PUBLIC_REPO_PAT }}
          ref: ${{ env.REF_NAME }}

      - name: 🔨 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: 🔨 Setup Ruby ${{env.RUBY_VERSION}}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{env.RUBY_VERSION}}
          bundler-cache: true

      - name: 🔨 Setup cocoapods
        if: matrix.platform == 'IOS'
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          version: 1.14.3

      - name: 🔨 Set up Firebase
        if: matrix.platform == 'android'
        shell: bash
        run: npm install -g firebase-tools

      - name: 🔨 Install Dependencies
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: 🔨 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: "latest"
          token: ${{ secrets.EXPO_CLI_TOKEN }}

      - name: 🔨 Checl
        shell: bash
        run: bash scripts/helper.sh

      - name: 🔨 Load build version and build number
        shell: bash
        run: bash scripts/load-build-env.sh

      - name: 🔨 Configuring Secret File
        run: eas env:exec ${{ env.PROFILE }} "yarn load-secret-file"

      - name: 🔨 Configuring Build Info and Prebuild
        run: eas env:exec ${{ env.PROFILE }} "yarn prebuild --platform ${{ matrix.platform }}"

      - name: 🏗 Build ${{matrix.platform}}
        run: bash scripts/build-ci.sh --platform ${{ matrix.platform }} --profile ${{ env.PROFILE }}

      - name: 🏗 Deploy ${{matrix.platform}}
        run: eas env:exec ${{ env.PROFILE }} "yarn delivery --platform ${{ matrix.platform }} --profile ${{ env.PROFILE }}"
